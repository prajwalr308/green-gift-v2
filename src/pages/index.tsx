import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import Image from "next/image";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  return (
    <>
      <Head>
        <title>GreenGift</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <Navbar />
      </main>
    </>
  );
};

export default Home;

const Navbar: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="w-full border-slate-400  md:max-w-6xl">
      <div className="flex gap-5 border-b border-slate-400 p-4">
        <div className=" flex w-full gap-3">
          {sessionData ? (
            <Image
              src={sessionData?.user.image || ""}
              alt="profile"
              width={48}
              height={18}
              className="gap-3 rounded-full"
            />
          ) : (
            <div className="mb-12"></div> //put logo here later
          )}
        </div>
        <button className=" rounded-full font-semibold text-black no-underline transition">
          posts
        </button>
        <button
          className={
            sessionData
              ? `w-2/12  rounded bg-red-500 font-semibold  text-white hover:bg-red-600`
              : `w-2/12  rounded bg-blue-500  font-semibold text-white hover:bg-blue-600`
          }
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? "Sign out" : "Sign in"}
        </button>
      </div>
      <p className="text-center text-2xl text-black">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
    </div>
  );
};
