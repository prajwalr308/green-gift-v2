import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import Image from "next/image";
import AddPosts from "~/components/AddPosts";
import React, { useEffect } from "react";

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  const ctx = api.useContext();
  const { mutate, isLoading: isPosting } = api.postLikes.likedPost.useMutation({
    onSuccess: (data) => {
      console.log(data);

      void ctx.posts.getAll.invalidate();
    },
    onError: (err) => {
      // const errorMessage = err.data?.zodError?.fieldErrors;

      console.log(err);
    },
  });

  if (isLoading) return <div>loading...</div>;
  if (!data) return <div>no data</div>;
  console.log(data);
  return (
    <>
      <Head>
        <title>GreenGift</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="flex justify-center">
          <Navbar />
        </div>
        <div className="flex justify-center ">
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:max-w-6xl md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-4">
            {data?.map((post) => (
              <div key={post.id} className="rounded-lg bg-white shadow-md">
                <div className="p-4">
                  <div className="mb-2 font-bold">Title: {post.title}</div>
                  <div className="mb-4">desc: {post.content}</div>
                  <div className="mb-2 text-sm text-gray-500">
                    Location: {post.location}
                  </div>
                  {post.image && (
                    <div className="mb-4">
                      <Image
                        src={post.image}
                        alt="profile"
                        width={298}
                        height={198}
                        className="rounded-lg shadow-md"
                      />
                    </div>
                  )}
                  {/* button for like  */}
                  <button
                    onClick={() => {
                      mutate({ postId: post.id });
                    }}
                    className="rounded-full font-semibold text-black no-underline transition"
                  >
                    Like:{post.PostLikes.length}
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const Navbar: React.FC = () => {
  const { data: sessionData } = useSession();
  const [showModal, setShowModal] = React.useState(false);
  const openModal = () => setShowModal(true);
  const closeModal = () => setShowModal(false);

  return (
    <div className="w-full border-slate-400  md:max-w-6xl">
      <div className="flex gap-5 border-b border-slate-400 p-4">
        <div className=" flex w-full gap-3">
          {sessionData ? (
            <Image
              src={sessionData?.user.image || ""}
              alt="profile"
              width={48}
              height={18}
              className="gap-3 rounded-full"
            />
          ) : (
            <div className="mb-12"></div> //put logo here later
          )}
        </div>
        <button
          className=" rounded-full font-semibold text-black no-underline transition"
          onClick={() => setShowModal(true)}
        >
          Create
        </button>
        <AddPosts
          showModal={showModal}
          setShowModal={setShowModal}
          openModal={openModal}
          closeModal={closeModal}
        />
        <button className=" rounded-full font-semibold text-black no-underline transition">
          posts
        </button>
        <button
          className={
            sessionData
              ? `w-2/12  rounded bg-red-500 font-semibold  text-white hover:bg-red-600`
              : `w-2/12  rounded bg-blue-500  font-semibold text-white hover:bg-blue-600`
          }
          onClick={sessionData ? () => void signOut() : () => void signIn()}
        >
          {sessionData ? "Sign out" : "Sign in"}
        </button>
      </div>
    </div>
  );
};
